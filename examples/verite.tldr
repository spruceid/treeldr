base <https://verite.id/verite/appendix/schemas/>

use <http://www.w3.org/2001/XMLSchema#> as rdf
use <http://www.w3.org/1999/02/22-rdf-syntax-ns#> as rdfs
use <http://www.w3.org/2001/XMLSchema#> as xs
use <http://schema.org/> as schema

type schema:PostalAddress {}

/// KYC/AML Attestation.
/// 
/// Represents an attestation a KYC/AML process has been performed according to
/// a specified defined process. A KYC/AML process is defined at the
/// country-level, referenced as linked data.
/// 
/// The KYC/AML attestation structure is intended to address regulatory
/// compliance only, and not filtering on additional personal data attributes.
/// An example of the latter is filtering out users based on state residence for
/// idiosyncratic compliance purposes. This distinction helps reduce required
/// attributes about the credential subject (and finer-grained personal data)
/// within the credential.
/// 
/// ## Example
/// 
/// ```json
/// {
///   "type": "KYCAMLAttestation",
///   "process": "https://verite.id/definitions/processes/kycaml/0.0.1/usa",
///   "approvalDate": "2021-08-25T02:13:43.387Z"
/// }
/// ```
type KYCAMLAttestation {
	/// Defines which KYC/AML process was performed.
	process: required xs:string,

	/// Date of KYC/AML process completion.
	/// 
	/// May be on or before the `issuanceDate` of the credential
	/// (in the outer VC wrapper). The `approvalDate` attribute value is an
	/// ISO 8601-formatted string.
	approvalDate: xs:date // TODO: `xs:date` is a subset of ISO-8601, which should be used here.
}

/// Address Ownership.
/// 
/// Expresses proof of ownership of an address for any chain that uses
/// public-private key cryptography in address ownership.
/// 
/// This schema avoids arbitrary signatures and promotes an interoperable
/// approach to proving address ownership. It is useful when embedded in other
/// schemas and protocols (such as the counterparty exchange protocol and the
/// credit score schema).
/// 
/// Proofs of control using both single-key and multiple-key ("multi-sig")
/// variants are supported.
/// 
/// ## Example
/// 
/// ```json
/// {
///   "type": "AddressOwner",
///   "chain": "ethereum-ropsten",
///   "address": "0x967af20D190EE4558Fd218A8B0be4065beEfCAce",
///   "proof": "xyz"
/// }
/// ```
type AddressOwner {
	/// Which blockchain the attestation is applicable to.
	/// 
	/// Case-insensitive string containing the full name of the chain.
	/// The full name of the chain MUST be formed by concatenating the primary name
	/// (e.g., "ethereum"), hyphen ("-"), and the testname name (e.g., "ropsten");
	/// e.g., "ethereum-ropsten").
	chain: required xs:string, // TODO handle case-insensitiveness.

	/// Address on the indicated chain.
	address: required xs:string,
}

/// Counterparty Compliance.
/// 
/// Describes an attestation of Counterparty PII used for originators and
/// beneficiaries of transactions that trigger counterparty exchange
/// requirements, such as the US Travel Rule and the FATF InterVASP message
/// requirements.
/// 
/// ## Example
/// 
/// ```json
/// {
///   "type": "CounterpartyAccountHolder",
///   "legalName": "Some Account Holder",
///   "address": {
///     "type": "PostalAddress",
///     "addressCountry": "United States",
///     "addressLocality": "Mountain View",
///     "addressRegion": "CA",
///     "name": "Some Account Holder",
///     "postOfficeBoxNumber": "321",
///     "postalCode": "12345"
///   },
///   "accountNumber": "12345678"
/// }
/// ```
type CounterpartyAccountHolder {
	/// Legal name of the subject entity.
	/// 
	/// Referred to as 'name of transmittor | recipient' in Travel Rule
	/// terminology. It is a string containing the subject's full legal name.
	legalName: required xs:string,

	/// Postal address of the subject entity.
	address: required schema:PostalAddress,

	/// Subject's account number with the issuer/provider or on-chain.
	/// 
	/// If on-chain, this MUST be a public address (e.g., an eth account)
	/// and duplicated from the data in the accompanying transaction.
	accountNumber: required xs:string,

	/// Context for the account, with the name of issuer, provider, or chain.
	/// 
	/// This corresponds to 'identity of the financial institution' in
	/// Travel Rule terminology. If omitted, it is the issuer DID in the VC.
	/// This property provides context for the `accountNumber` property.
	accountSource: xs:string,

	/// Identifier of the subject.
	/// 
	/// The "legalID" attribute value is a string containing either a DID or a
	/// provider-specific customer ID.
	/// If omitted, it is assumed to be the subject DID in the encompassing VC.
	legalID: xs:string
}