// Sets the base IRI of the document.
base <https://spruceid.com/rebase/schema/>;

// Declare some IRI prefixes.
use <http://www.w3.org/2000/01/rdf-schema#> as rdfs;
use <http://www.w3.org/2001/XMLSchema#> as xs;
use <https://schema.org/> as schema;
use <https://treeldr.org/> as tldr;
use <https://www.w3.org/2018/credentials#> as vc;
use <https://example.com/rebase/> as rebase;

/// Basic Blog Post.
// 
// This is a custom layout for the `schema:BlogPosting` type.
layout BasicPost for schema:BlogPosting {
	/// Identifier of the post.
	//
	// We use the `tldr:self` property that reflects each value.
	// By using the `&rdfs:Resource`, a reference to a resource,
	// we ensure that `id` will hold a reference to itself.
	// In other word, `id` will be the identifier of the post itself.
	tldr:self as id: required &rdfs:Resource,

	/// Title of the post.
	schema:title: xs:string,

	/// Content of the post.
	schema:body: xs:string
}

/// Verifiable `BasicPost`.
/// 
/// Defined as a `vc:VerifiableCredential` where the
/// credential subject is a `schema:BlogPosting`.
//
// The `with` keyword is used to define what default layout to use
// for `vc:VerifiableCredential` and `schema:BlogPosting`.
// Using it TreeLDR will automatically derive the following layout
// definition for this type:
// ```
// layout VerifiableBasicPost for VerifiableBasicPost =
//   rebase:Credential & all vc:credentialSubject: BasicPost;
// ```
type VerifiableBasicPost =
	(vc:VerifiableCredential with rebase:Credential) &
	all vc:credentialSubject: (schema:BlogPosting with BasicPost);