{
	"scopeName": "source.treeldr",
	"patterns": [
		{
			"name": "comment.line.documentation.treeldr",
			"begin": "///",
			"end": "\n"
		},
		{
			"name": "comment.line.double-slash.treeldr",
			"begin": "//",
			"end": "\n"
		},
		{
			"name": "keyword.treeldr",
			"match": "(?<!as\\s*)\\b(base|use|as|type|property|layout|for|any|all)\\b(?!\\s*(:|as))"
		},
		{
			"name": "entity.name.tag.treeldr",
			"match": "(?<!as\\s*)\\b(required|multiple|single)\\b(?!\\s*(:|as))"
		},
		{
			"name": "variable.prefix.treeldr",
			"match": "\\b\\w+(?=:\\w)"
		},
		{
			"name": "entity.name.type.treeldr",
			"match": "\\b\\p{Lu}\\w*\\b"
		},
		{
			"name": "entity.name.type.xsd.treeldr",
			"match": "(?<=xs:)\\w+\\b"
		},
		{
			"name": "string.quoted.other.uri.treeldr",
			"begin": "<",
			"end": ">"
		},
		{
			"name": "string.quoted.double.treeldr",
			"match": "\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"",
			"patterns": [
				{
					"name": "constant.character.escape.treeldr",
					"match": "\\."
				}
			]
		},
		{
			"name": "string.regexp.treeldr",
			"match": "/[^/\\\\]*(?:\\\\.[^/\\\\]*)*/",
			"patterns": [
				{
					"name": "constant.character.escape.treeldr",
					"match": "\\."
				}
			]
		}
	]
}