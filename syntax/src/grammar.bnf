/* TreeLDR Document. */
treeldrDoc               ::= item*

item                     ::= base | use | type | layout | property

base                     ::= 'base' IRIREF ';'
use                      ::= 'use' IRIREF 'as' name ';'
type                     ::= 'type' (typeAlias | typeDefinition)
layout                   ::= 'layout' (layoutAlias | layoutStructDefinition)
property                 ::= 'property' propertyDefinition ';'

typeAlias                ::= id '=' typeExpr ';'
typeDefinition           ::= id '{' propertyList? '}'

layoutAlias              ::= id '=' layoutExpr ';'
layoutStructDefinition   ::= id ['for' id]? '{' fieldList? '}'

fieldList                ::= fieldDefinition (',' fieldDefinition)*
fieldDefinition          ::= attributeList? id [':' attributeList? layoutExpr]?

propertyDefinition       ::= attributeList? id [':' attributeList? typeExpr]?
propertyList             ::= propertyDefinition (',' propertyDefinition)*
attribute                ::= 'required' | 'multiple'
attributeList            ::= attribute (',' attribute)*

/* Node identifier */
id                       ::= NAME | COMPACT_IRI | IRIREF

/* Type expressions. */
typeExpr                 ::= innerNamedTypeExpr | typeUnion | typeIntersection
innerNamedTypeExpr       ::= innerTypeExpr ['as' NAME | 'with' id]?
innerTypeExpr            ::= id | referenceLayout | literal | propertyRestriction | listType | '(' typeExpr ')'
typeUnion                ::= innerNamedTypeExpr ('|' innerNamedTypeExpr)*
typeIntersection         ::= innerNamedTypeExpr ('&' innerNamedTypeExpr)*

propertyRestriction      ::= propertyRangeRestriction
propertyRangeRestriction ::= ('any' | 'all') id ['as' NAME]? ':' innerTypeExpr

listType                 ::= '[' innerTypeExpr ']'

/* Layout expressions. */
layoutExpr               ::= InnerNamedLayoutExpr | layoutUnion | layoutIntersection
InnerNamedLayoutExpr     ::= innerLayoutExpr ['as' NAME]?
innerLayoutExpr          ::= id | referenceLayout | literal | FieldRestriction | arrayLayout | '(' layoutExpr ')'
layoutUnion              ::= innerNamedLayoutExpr ('|' innerNamedLayoutExpr)*
layoutIntersection       ::= innerNamedLayoutExpr ('&' innerNamedLayoutExpr)*

layoutRestriction        ::= layoutRangeRestriction
layoutRangeRestriction   ::= ('any' | 'all') [id 'as']? NAME ':' innerLayoutExpr

arrayLayout              ::= '[' innerLayoutExpr ']'

/* Type/Layout expressions. */
referenceLayout          ::= '&' innerTypeExpr
literal                  ::= STRING | REGEXP

/* Productions for terminals. */
NAME                     ::= PN_CHARS
IRIREF                   ::= '<' ([^#x00-#x20<>"{}|^`\] | UCHAR)* '>' /* #x00=NULL #01-#x1F=control codes #x20=space */
COMPACT_IRI              ::= PN_PREFIX? ':' PN_LOCAL
STRING                   ::= '"' ([^#x22#x5C#xA#xD] | ECHAR | UCHAR)* '"' /* #x22=" #x5C=\ #xA=new line #xD=carriage return */
REGEXP                   ::= '/' ([^#x2F#x5C#xA#xD] | ECHAR | UCHAR)* '/' /* #x2F=/ #x5C=\ #xA=new line #xD=carriage return */
UCHAR 	                 ::= 	'\u' HEX HEX HEX HEX | '\U' HEX HEX HEX HEX HEX HEX HEX HEX
ECHAR 	                 ::= 	'\' [tbnrf"'\]

PN_CHARS_BASE            ::= [A-Z] | [a-z] | [#x00C0-#x00D6] | [#x00D8-#x00F6] | [#x00F8-#x02FF] | [#x0370-#x037D] | [#x037F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
PN_CHARS_U               ::= PN_CHARS_BASE | '_'
PN_CHARS                 ::= PN_CHARS_U | '-' | [0-9] | #x00B7 | [#x0300-#x036F] | [#x203F-#x2040]
PN_PREFIX                ::= PN_CHARS_BASE ((PN_CHARS | '.')* PN_CHARS)?
PN_LOCAL                 ::= (PN_CHARS_U | ':' | [0-9] | PLX) ((PN_CHARS | '.' | ':' | PLX)* (PN_CHARS | ':' | PLX))?

WS                       ::= #x20 | #x9 | #xD | #xA /* #x20=space #x9=character tabulation #xD=carriage return #xA=new line */