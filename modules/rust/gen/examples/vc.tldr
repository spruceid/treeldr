use <http://www.w3.org/2000/01/rdf-schema#> as rdfs;
use <http://www.w3.org/2001/XMLSchema#> as xs;
use <https://www.w3.org/2018/credentials#> as vc;

/// Verifiable Credential.
/// 
/// A set of one or more claims made by an issuer.
/// A verifiable credential is a tamper-evident credential that has authorship
/// that can be cryptographically verified. Verifiable credentials can be used
/// to build verifiable presentations, which can also be cryptographically
/// verified. The claims in a credential can be about different subjects.
type vc:VerifiableCredential {
	/// Credential Subject.
	/// 
	/// The value of the `credentialSubject` property is defined as a set of
	/// objects that contain one or more properties that are each related to a
	/// subject of the verifiable credential.
	/// 
	/// A verifiable credential MUST have a credentialSubject property. 
	vc:credentialSubject: required multiple rdfs:Resource,

	/// Issuer.
	/// 
	/// It is RECOMMENDED that the URI in the issuer or its id be one which,
	/// if dereferenced, results in a document containing machine-readable
	/// information about the issuer that can be used to verify the information
	/// expressed in the credential.
	vc:issuer: rdfs:Resource,

	/// Issuance Date.
	/// 
	/// This value represents the earliest point in time at which the
	/// information associated with the credentialSubject property becomes
	/// valid.
	/// 
	/// A credential MUST have an issuanceDate property.
	vc:issuanceDate: required xs:dateTime,

	/// Proofs (Signatures).
	/// 
	/// One or more cryptographic proofs that can be used to detect tampering
	/// and verify the authorship of a credential or presentation.
	/// The specific method used for an embedded proof MUST be included using
	/// the type property. 
	vc:proof: multiple rdfs:Resource,

	/// Expiration.
	/// 
	/// Represents the date and time the credential ceases to be valid.
	vc:expirationDate: xs:dateTime,

	/// Status.
	vc:credentialStatus: rdfs:Resource,

	/// Terms of Use.
	/// 
	/// One or more terms of use policies under which the creator issued the
	/// credential or presentation. If the recipient (a holder or verifier) is
	/// not willing to adhere to the specified terms of use, then they do so on
	/// their own responsibility and might incur legal liability if they violate
	/// the stated terms of use.
	/// 
	/// Terms of use can be utilized by an issuer or a holder to communicate the
	/// terms under which a verifiable credential or verifiable presentation was
	/// issued. The issuer places their terms of use inside the verifiable
	/// credential. The holder places their terms of use inside a verifiable
	/// presentation. This specification defines a termsOfUse property for
	/// expressing terms of use information.
	/// 
	/// The value of the `termsOfUse` property tells the verifier what actions
	/// it is required to perform (an obligation), not allowed to perform
	/// (a prohibition), or allowed to perform (a permission) if it is to accept
	/// the verifiable credential or verifiable presentation.
	vc:termsOfUse: multiple rdfs:Resource,

	/// Evidence.
	/// 
	/// One or more evidence schemes providing enough information for a verifier
	/// to determine whether the evidence gathered by the issuer meets its
	/// confidence requirements for relying on the credential.
	/// 
	/// Evidence can be included by an issuer to provide the verifier with
	/// additional supporting information in a verifiable credential.
	/// This could be used by the verifier to establish the confidence with
	/// which it relies on the claims in the verifiable credential.
	/// 
	/// For example, an issuer could check physical documentation provided by
	/// the subject or perform a set of background checks before issuing the
	/// credential. In certain scenarios, this information is useful to the
	/// verifier when determining the risk associated with relying on a given
	/// credential.
	vc:evidence: multiple rdfs:Resource,

	/// Data Schemas.
	/// 
	/// One or more data schemas that provide verifiers with enough information
	/// to determine if the provided data conforms to the provided schema.
	/// 
	/// Data schemas are useful when enforcing a specific structure on a given
	/// collection of data. There are at least two types of data schemas that
	/// this specification considers:
	///   - Data verification schemas, which are used to verify that the
	///     structure and contents of a credential or verifiable credential
	///     conform to a published schema.
	///   - Data encoding schemas, which are used to map the contents of a
	///     verifiable credential to an alternative representation format, such
	///     as a binary format used in a zero-knowledge proof.
	/// 
	/// It is important to understand that data schemas serve a different
	/// purpose from the @context property, which neither enforces data
	/// structure or data syntax, nor enables the definition of arbitrary
	/// encodings to alternate representation formats.
	vc:credentialSchema: multiple rdfs:Resource,

	/// Refreshing.
	/// 
	/// One or more refresh services that provides enough information to the
	/// recipient's software such that the recipient can refresh the verifiable
	/// credential.
	/// 
	/// It is useful for systems to enable the manual or automatic refresh of
	/// an expired verifiable credential.  The issuer can include the refresh
	/// service as an element inside the verifiable credential if it is intended
	/// for either the verifier or the holder (or both), or inside the
	/// verifiable presentation if it is intended for the holder only. In the
	/// latter case, this enables the holder to refresh the verifiable
	/// credential before creating a verifiable presentation to share with a
	/// verifier. In the former case, including the refresh service inside the
	/// verifiable credential enables either the holder or the verifier to
	/// perform future updates of the credential.
	/// 
	/// The refresh service is only expected to be used when either the
	/// credential has expired or the issuer does not publish credential status
	/// information. Issuers are advised not to put the `refreshService`
	/// property in a verifiable credential that does not contain public
	/// information or whose refresh service is not protected in some way.
	vc:refreshService: multiple rdfs:Resource
}